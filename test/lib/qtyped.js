(function() {
  var $$, $_, Believe, Variable, _$, __, _exists, _on, assert, context_, runtime, unit_, yamlcontext_;

  assert = require('chai').assert;

  ({unit_, runtime, _exists, _on} = require('./common'));

  $$ = unit_(module);

  ({__, $_, _$, context_, yamlcontext_, Variable, Believe} = runtime);

  describe('Query', function() {
    return describe('Typed', function() {
      return it('should work', function() {
        var $x, $y, ctx;
        ctx = yamlcontext_().load($$.dataPath('blocks.yml'));
        $$.h2("All Clauses");
        $$._(ctx.toString());
        $$.h2('Binders');
        $x = new Variable('$x', function(v) {
          return v instanceof Block;
        });
        $y = new Variable('$y');
        $$.$("ctx.query Believe, $x, _on, $y");
        return ctx.query(Believe, $x, _on, $y).exec(function(binder) {
          return $$._(binder);
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXR5cGVkLmpzIiwic291cmNlcyI6WyJxdHlwZWQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLE9BQUEsRUFBQSxRQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLE1BQUEsRUFBQSxRQUFBLEVBQUEsT0FBQSxFQUFBLEtBQUEsRUFBQTs7RUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLE1BQVIsQ0FBZSxDQUFDOztFQUN6QixDQUFBLENBQUMsS0FBRCxFQUFRLE9BQVIsRUFBaUIsT0FBakIsRUFBMEIsR0FBMUIsQ0FBQSxHQUFpQyxPQUFBLENBQVEsVUFBUixDQUFqQzs7RUFDQSxFQUFBLEdBQUssS0FBQSxDQUFNLE1BQU47O0VBQ0wsQ0FBQSxDQUFDLEVBQUQsRUFBSyxFQUFMLEVBQVMsRUFBVCxFQUFhLFFBQWIsRUFBdUIsWUFBdkIsRUFBcUMsUUFBckMsRUFBK0MsT0FBL0MsQ0FBQSxHQUEwRCxPQUExRDs7RUFFQSxRQUFBLENBQVMsT0FBVCxFQUFrQixRQUFBLENBQUEsQ0FBQTtXQUNoQixRQUFBLENBQVMsT0FBVCxFQUFrQixRQUFBLENBQUEsQ0FBQTthQUNoQixFQUFBLENBQUcsYUFBSCxFQUFrQixRQUFBLENBQUEsQ0FBQTtBQUNoQixZQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUE7UUFBQSxHQUFBLEdBQU0sWUFBQSxDQUFBLENBQWMsQ0FBQyxJQUFmLENBQW9CLEVBQUUsQ0FBQyxRQUFILENBQVksWUFBWixDQUFwQjtRQUVOLEVBQUUsQ0FBQyxFQUFILENBQU0sYUFBTjtRQUNBLEVBQUUsQ0FBQyxDQUFILENBQUssR0FBRyxDQUFDLFFBQUosQ0FBQSxDQUFMO1FBRUEsRUFBRSxDQUFDLEVBQUgsQ0FBTSxTQUFOO1FBQ0EsRUFBQSxHQUFLLElBQUksUUFBSixDQUFhLElBQWIsRUFBbUIsUUFBQSxDQUFDLENBQUQsQ0FBQTtpQkFBTyxDQUFBLFlBQWE7UUFBcEIsQ0FBbkI7UUFDTCxFQUFBLEdBQUssSUFBSSxRQUFKLENBQWEsSUFBYjtRQUVMLEVBQUUsQ0FBQyxDQUFILENBQUssZ0NBQUw7ZUFDQSxHQUFHLENBQUMsS0FBSixDQUFVLE9BQVYsRUFBbUIsRUFBbkIsRUFBdUIsR0FBdkIsRUFBNEIsRUFBNUIsQ0FDQSxDQUFDLElBREQsQ0FDTSxRQUFBLENBQUMsTUFBRCxDQUFBO2lCQUNKLEVBQUUsQ0FBQyxDQUFILENBQUssTUFBTDtRQURJLENBRE47TUFYZ0IsQ0FBbEI7SUFEZ0IsQ0FBbEI7RUFEZ0IsQ0FBbEI7QUFMQSIsInNvdXJjZXNDb250ZW50IjpbImFzc2VydCA9IHJlcXVpcmUoJ2NoYWknKS5hc3NlcnRcbnt1bml0XywgcnVudGltZSwgX2V4aXN0cywgX29ufSA9IHJlcXVpcmUoJy4vY29tbW9uJylcbiQkID0gdW5pdF8gbW9kdWxlXG57X18sICRfLCBfJCwgY29udGV4dF8sIHlhbWxjb250ZXh0XywgVmFyaWFibGUsIEJlbGlldmV9ID0gcnVudGltZVxuXG5kZXNjcmliZSAnUXVlcnknLCAtPlxuICBkZXNjcmliZSAnVHlwZWQnLCAtPlxuICAgIGl0ICdzaG91bGQgd29yaycsIC0+XG4gICAgICBjdHggPSB5YW1sY29udGV4dF8oKS5sb2FkICQkLmRhdGFQYXRoKCdibG9ja3MueW1sJylcblxuICAgICAgJCQuaDIgXCJBbGwgQ2xhdXNlc1wiXG4gICAgICAkJC5fIGN0eC50b1N0cmluZygpXG5cbiAgICAgICQkLmgyICdCaW5kZXJzJ1xuICAgICAgJHggPSBuZXcgVmFyaWFibGUgJyR4JywgKHYpIC0+IHYgaW5zdGFuY2VvZiBCbG9ja1xuICAgICAgJHkgPSBuZXcgVmFyaWFibGUgJyR5J1xuXG4gICAgICAkJC4kIFwiY3R4LnF1ZXJ5IEJlbGlldmUsICR4LCBfb24sICR5XCJcbiAgICAgIGN0eC5xdWVyeSBCZWxpZXZlLCAkeCwgX29uLCAkeVxuICAgICAgLmV4ZWMgKGJpbmRlcikgLT5cbiAgICAgICAgJCQuXyBiaW5kZXJcbiJdfQ==

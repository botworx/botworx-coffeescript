(function() {
  var $$, $_, Achieve, Assert, Attempt, Believe, Context, Message, Method, OnAssert, OnRetract, Policy, Retract, Rule, Runner, Term, Trigger, __, _hello, _say, assert, module_, onAttempt, runner_, runtime, unit_;

  assert = require('chai').assert;

  ({unit_, runtime} = require('./common'));

  $$ = unit_(module);

  ({Term, Context, Assert, Retract, Believe, Attempt, Achieve} = runtime);

  ({$_, __, runner_, module_, Message, Policy, Rule, Trigger, OnAssert, OnRetract, onAttempt, Runner, Method} = runtime);

  ({_hello, _say} = $_(['hello', 'say']));

  describe('Task', function() {
    return describe('@perform', function() {
      return it('should work', function() {
        var action;
        action = function() {
          this.def(onAttempt(Achieve, null, _hello, null), function() {
            this.def(onAttempt(Achieve, null, _say, __), function() {
              var $t;
              $t = this.msg.data.obj;
              return $$.log($t);
            });
            this.perform(null, _say, "Hello World");
            return this.perform(null, _say, "Goodbye World");
          });
          return this.perform(null, _hello, null);
        };
        return runner_().run(module_(action));
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVsbG8uanMiLCJzb3VyY2VzIjpbImhlbGxvLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxPQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxNQUFBLEVBQUEsUUFBQSxFQUFBLFNBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsRUFBQSxFQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLFNBQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBOztFQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsTUFBUixDQUFlLENBQUM7O0VBQ3pCLENBQUEsQ0FBQyxLQUFELEVBQVEsT0FBUixDQUFBLEdBQW1CLE9BQUEsQ0FBUSxVQUFSLENBQW5COztFQUNBLEVBQUEsR0FBSyxLQUFBLENBQU0sTUFBTjs7RUFDTCxDQUFBLENBQUMsSUFBRCxFQUFPLE9BQVAsRUFBZ0IsTUFBaEIsRUFBd0IsT0FBeEIsRUFBaUMsT0FBakMsRUFBMEMsT0FBMUMsRUFBbUQsT0FBbkQsQ0FBQSxHQUE4RCxPQUE5RDs7RUFDQSxDQUFBLENBQUMsRUFBRCxFQUFLLEVBQUwsRUFBUyxPQUFULEVBQWtCLE9BQWxCLEVBQTJCLE9BQTNCLEVBQW9DLE1BQXBDLEVBQTRDLElBQTVDLEVBQWtELE9BQWxELEVBQTJELFFBQTNELEVBQXFFLFNBQXJFLEVBQWdGLFNBQWhGLEVBQTJGLE1BQTNGLEVBQW1HLE1BQW5HLENBQUEsR0FBNkcsT0FBN0c7O0VBRUEsQ0FBQSxDQUFDLE1BQUQsRUFBUyxJQUFULENBQUEsR0FBaUIsRUFBQSxDQUFHLENBQUMsT0FBRCxFQUFVLEtBQVYsQ0FBSCxDQUFqQjs7RUFFQSxRQUFBLENBQVMsTUFBVCxFQUFpQixRQUFBLENBQUEsQ0FBQTtXQUNmLFFBQUEsQ0FBUyxVQUFULEVBQXFCLFFBQUEsQ0FBQSxDQUFBO2FBQ25CLEVBQUEsQ0FBRyxhQUFILEVBQWtCLFFBQUEsQ0FBQSxDQUFBO0FBQ2hCLFlBQUE7UUFBQSxNQUFBLEdBQVMsUUFBQSxDQUFBLENBQUE7VUFDUCxJQUFDLENBQUEsR0FBRCxDQUFLLFNBQUEsQ0FBVSxPQUFWLEVBQW1CLElBQW5CLEVBQXlCLE1BQXpCLEVBQWlDLElBQWpDLENBQUwsRUFBNkMsUUFBQSxDQUFBLENBQUE7WUFDM0MsSUFBQyxDQUFBLEdBQUQsQ0FBSyxTQUFBLENBQVUsT0FBVixFQUFtQixJQUFuQixFQUF5QixJQUF6QixFQUErQixFQUEvQixDQUFMLEVBQXlDLFFBQUEsQ0FBQSxDQUFBO0FBQ3ZDLGtCQUFBO2NBQUEsRUFBQSxHQUFLLElBQUMsQ0FBQSxHQUFHLENBQUMsSUFBSSxDQUFDO3FCQUNmLEVBQUUsQ0FBQyxHQUFILENBQU8sRUFBUDtZQUZ1QyxDQUF6QztZQUdBLElBQUMsQ0FBQSxPQUFELENBQVMsSUFBVCxFQUFlLElBQWYsRUFBcUIsYUFBckI7bUJBQ0EsSUFBQyxDQUFBLE9BQUQsQ0FBUyxJQUFULEVBQWUsSUFBZixFQUFxQixlQUFyQjtVQUwyQyxDQUE3QztpQkFNQSxJQUFDLENBQUEsT0FBRCxDQUFTLElBQVQsRUFBZSxNQUFmLEVBQXVCLElBQXZCO1FBUE87ZUFTVCxPQUFBLENBQUEsQ0FBUyxDQUFDLEdBQVYsQ0FBYyxPQUFBLENBQVEsTUFBUixDQUFkO01BVmdCLENBQWxCO0lBRG1CLENBQXJCO0VBRGUsQ0FBakI7QUFSQSIsInNvdXJjZXNDb250ZW50IjpbImFzc2VydCA9IHJlcXVpcmUoJ2NoYWknKS5hc3NlcnRcbnt1bml0XywgcnVudGltZX0gPSByZXF1aXJlKCcuL2NvbW1vbicpXG4kJCA9IHVuaXRfIG1vZHVsZVxue1Rlcm0sIENvbnRleHQsIEFzc2VydCwgUmV0cmFjdCwgQmVsaWV2ZSwgQXR0ZW1wdCwgQWNoaWV2ZX0gPSBydW50aW1lXG57JF8sIF9fLCBydW5uZXJfLCBtb2R1bGVfLCBNZXNzYWdlLCBQb2xpY3ksIFJ1bGUsIFRyaWdnZXIsIE9uQXNzZXJ0LCBPblJldHJhY3QsIG9uQXR0ZW1wdCwgUnVubmVyLCBNZXRob2R9ID0gcnVudGltZVxuXG57X2hlbGxvLCBfc2F5fSA9ICRfIFsnaGVsbG8nLCAnc2F5J11cblxuZGVzY3JpYmUgJ1Rhc2snLCAtPlxuICBkZXNjcmliZSAnQHBlcmZvcm0nLCAtPlxuICAgIGl0ICdzaG91bGQgd29yaycsIC0+XG4gICAgICBhY3Rpb24gPSAtPlxuICAgICAgICBAZGVmIG9uQXR0ZW1wdChBY2hpZXZlLCBudWxsLCBfaGVsbG8sIG51bGwpLCAtPlxuICAgICAgICAgIEBkZWYgb25BdHRlbXB0KEFjaGlldmUsIG51bGwsIF9zYXksIF9fKSwgLT5cbiAgICAgICAgICAgICR0ID0gQG1zZy5kYXRhLm9ialxuICAgICAgICAgICAgJCQubG9nKCR0KVxuICAgICAgICAgIEBwZXJmb3JtKG51bGwsIF9zYXksIFwiSGVsbG8gV29ybGRcIilcbiAgICAgICAgICBAcGVyZm9ybShudWxsLCBfc2F5LCBcIkdvb2RieWUgV29ybGRcIilcbiAgICAgICAgQHBlcmZvcm0obnVsbCwgX2hlbGxvLCBudWxsKVxuXG4gICAgICBydW5uZXJfKCkucnVuIG1vZHVsZV8oYWN0aW9uKVxuIl19

(function() {
  var $$, $_, Believe, Variable, _$, __, _exists, _on, assert, context_, runtime, unit_, yamlloader_;

  assert = require('chai').assert;

  ({unit_, runtime, _exists, _on} = require('./common'));

  $$ = unit_(module);

  ({__, $_, _$, context_, yamlloader_, Variable, Believe} = runtime);

  describe('Query', function() {
    return describe('Types', function() {
      return it('should work', function() {
        var $x, $y, ctx;
        ctx = context_().load(yamlloader_($$.dataPath('blocks.yml')));
        $$.h2("All Clauses");
        $$._(ctx.toString());
        $$.h2('Binders');
        $x = new Variable('$x', function(v) {
          return v instanceof Block;
        });
        $y = new Variable('$y');
        $$.$("ctx.query Believe, $x, _on, $y");
        return ctx.query(Believe, $x, _on, $y).exec(function(binder) {
          return $$._(binder);
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXF1ZXJ5LmpzIiwic291cmNlcyI6WyJ0eXBlcXVlcnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQTs7RUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLE1BQVIsQ0FBZSxDQUFDOztFQUN6QixDQUFBLENBQUMsS0FBRCxFQUFRLE9BQVIsRUFBaUIsT0FBakIsRUFBMEIsR0FBMUIsQ0FBQSxHQUFpQyxPQUFBLENBQVEsVUFBUixDQUFqQzs7RUFDQSxFQUFBLEdBQUssS0FBQSxDQUFNLE1BQU47O0VBQ0wsQ0FBQSxDQUFDLEVBQUQsRUFBSyxFQUFMLEVBQVMsRUFBVCxFQUFhLFFBQWIsRUFBdUIsV0FBdkIsRUFBb0MsUUFBcEMsRUFBOEMsT0FBOUMsQ0FBQSxHQUF5RCxPQUF6RDs7RUFFQSxRQUFBLENBQVMsT0FBVCxFQUFrQixRQUFBLENBQUEsQ0FBQTtXQUNoQixRQUFBLENBQVMsT0FBVCxFQUFrQixRQUFBLENBQUEsQ0FBQTthQUNoQixFQUFBLENBQUcsYUFBSCxFQUFrQixRQUFBLENBQUEsQ0FBQTtBQUNoQixZQUFBO1FBQUEsR0FBQSxHQUFNLFFBQUEsQ0FBQSxDQUFVLENBQUMsSUFBWCxDQUFnQixXQUFBLENBQVksRUFBRSxDQUFDLFFBQUgsQ0FBWSxZQUFaLENBQVosQ0FBaEI7UUFFTixFQUFFLENBQUMsRUFBSCxDQUFNLGFBQU47UUFDQSxFQUFFLENBQUMsQ0FBSCxDQUFLLEdBQUcsQ0FBQyxRQUFKLENBQUEsQ0FBTDtRQUVBLEVBQUUsQ0FBQyxFQUFILENBQU0sU0FBTjtRQUNBLEVBQUEsR0FBSyxJQUFJLFFBQUosQ0FBYSxJQUFiLEVBQW1CLFFBQUEsQ0FBQyxDQUFELENBQUE7aUJBQU8sQ0FBQSxZQUFhO1FBQXBCLENBQW5CO1FBQ0wsRUFBQSxHQUFLLElBQUksUUFBSixDQUFhLElBQWI7UUFFTCxFQUFFLENBQUMsQ0FBSCxDQUFLLGdDQUFMO2VBQ0EsR0FBRyxDQUFDLEtBQUosQ0FBVSxPQUFWLEVBQW1CLEVBQW5CLEVBQXVCLEdBQXZCLEVBQTRCLEVBQTVCLENBQ0EsQ0FBQyxJQURELENBQ00sUUFBQSxDQUFDLE1BQUQsQ0FBQTtpQkFDSixFQUFFLENBQUMsQ0FBSCxDQUFLLE1BQUw7UUFESSxDQUROO01BWGdCLENBQWxCO0lBRGdCLENBQWxCO0VBRGdCLENBQWxCO0FBTEEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3NlcnQgPSByZXF1aXJlKCdjaGFpJykuYXNzZXJ0XG57dW5pdF8sIHJ1bnRpbWUsIF9leGlzdHMsIF9vbn0gPSByZXF1aXJlKCcuL2NvbW1vbicpXG4kJCA9IHVuaXRfIG1vZHVsZVxue19fLCAkXywgXyQsIGNvbnRleHRfLCB5YW1sbG9hZGVyXywgVmFyaWFibGUsIEJlbGlldmV9ID0gcnVudGltZVxuXG5kZXNjcmliZSAnUXVlcnknLCAtPlxuICBkZXNjcmliZSAnVHlwZXMnLCAtPlxuICAgIGl0ICdzaG91bGQgd29yaycsIC0+XG4gICAgICBjdHggPSBjb250ZXh0XygpLmxvYWQgeWFtbGxvYWRlcl8oJCQuZGF0YVBhdGgoJ2Jsb2Nrcy55bWwnKSlcblxuICAgICAgJCQuaDIgXCJBbGwgQ2xhdXNlc1wiXG4gICAgICAkJC5fIGN0eC50b1N0cmluZygpXG5cbiAgICAgICQkLmgyICdCaW5kZXJzJ1xuICAgICAgJHggPSBuZXcgVmFyaWFibGUgJyR4JywgKHYpIC0+IHYgaW5zdGFuY2VvZiBCbG9ja1xuICAgICAgJHkgPSBuZXcgVmFyaWFibGUgJyR5J1xuXG4gICAgICAkJC4kIFwiY3R4LnF1ZXJ5IEJlbGlldmUsICR4LCBfb24sICR5XCJcbiAgICAgIGN0eC5xdWVyeSBCZWxpZXZlLCAkeCwgX29uLCAkeVxuICAgICAgLmV4ZWMgKGJpbmRlcikgLT5cbiAgICAgICAgJCQuXyBiaW5kZXJcbiJdfQ==

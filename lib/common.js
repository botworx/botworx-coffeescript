(function() {

  /*
  This is the ROOT module of everything
  */
  var $$, Unit, __, clone, unit, unit_;

  require('./miajs').config();

  exports.unit = unit = require('./unit');

  ({Unit} = unit);

  Object.assign(exports, unit);

  require('./node');

  __ = void 0;

  exports.__ = __;

  var GeneratorFunction = Object.getPrototypeOf(function*(){}).constructor;

  exports.GeneratorFunction = GeneratorFunction;

  var AsyncFunction = Object.getPrototypeOf(async function(){}).constructor;

  exports.AsyncFunction = AsyncFunction;

  Function.prototype.property = function(prop, desc) {
    return Object.defineProperty(this.prototype, prop, desc);
  };

  Function.prototype.iterator = function(generator) {
    return this.prototype[Symbol.iterator] = this.prototype.iterator = generator;
  };

  Function.prototype.TIterable = function() {
    return this.prototype[Symbol.iterator] = function() {
      return this.iterator();
    };
  };

  exports.clone = clone = function(obj, xtra) {
    var k, temp, v;
    if (obj === null || typeof obj !== "object") {
      return obj;
    }
    temp = new obj.constructor();
    for (k in obj) {
      v = obj[k];
      temp[k] = v;
    }
    if (xtra && 'object' === typeof xtra) {
      for (k in xtra) {
        v = xtra[k];
        temp[k] = v;
      }
    }
    return temp;
  };

  exports.$$ = $$ = unit.package_(module);

  exports.unit_ = unit_ = function(cfg, parent = $$) {
    return new Unit(parent).config(cfg);
  };

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlcyI6WyJjb21tb24uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Ozs7TUFBQSxFQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLEVBQUEsSUFBQSxFQUFBOztFQUFBLE9BQUEsQ0FBUSxTQUFSLENBQWtCLENBQUMsTUFBbkIsQ0FBQTs7RUFDQSxPQUFPLENBQUMsSUFBUixHQUFlLElBQUEsR0FBTyxPQUFBLENBQVEsUUFBUjs7RUFDdEIsQ0FBQSxDQUFDLElBQUQsQ0FBQSxHQUFTLElBQVQ7O0VBQ0EsTUFBTSxDQUFDLE1BQVAsQ0FBYyxPQUFkLEVBQXVCLElBQXZCOztFQUVBLE9BQUEsQ0FBUSxRQUFSOztFQUlBLEVBQUEsR0FBSzs7RUFDTCxPQUFPLENBQUMsRUFBUixHQUFhOztFQUViOztFQUNBLE9BQU8sQ0FBQyxpQkFBUixHQUE0Qjs7RUFDNUI7O0VBQ0EsT0FBTyxDQUFDLGFBQVIsR0FBd0I7O0VBRXhCLFFBQVEsQ0FBQSxTQUFFLENBQUEsUUFBVixHQUFxQixRQUFBLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBQTtXQUNuQixNQUFNLENBQUMsY0FBUCxDQUFzQixJQUFDLENBQUEsU0FBdkIsRUFBa0MsSUFBbEMsRUFBd0MsSUFBeEM7RUFEbUI7O0VBR3JCLFFBQVEsQ0FBQSxTQUFFLENBQUEsUUFBVixHQUFxQixRQUFBLENBQUMsU0FBRCxDQUFBO1dBQ25CLElBQUMsQ0FBQSxTQUFVLENBQUEsTUFBTSxDQUFDLFFBQVAsQ0FBWCxHQUE4QixJQUFDLENBQUEsU0FBUyxDQUFDLFFBQVgsR0FBc0I7RUFEakM7O0VBR3JCLFFBQVEsQ0FBQSxTQUFFLENBQUEsU0FBVixHQUFzQixRQUFBLENBQUEsQ0FBQTtXQUNwQixJQUFDLENBQUEsU0FBVSxDQUFBLE1BQU0sQ0FBQyxRQUFQLENBQVgsR0FBOEIsUUFBQSxDQUFBLENBQUE7YUFBRyxJQUFDLENBQUEsUUFBRCxDQUFBO0lBQUg7RUFEVjs7RUFHdEIsT0FBTyxDQUFDLEtBQVIsR0FBZ0IsS0FBQSxHQUFRLFFBQUEsQ0FBQyxHQUFELEVBQU0sSUFBTixDQUFBO0FBQ3RCLFFBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQTtJQUFBLElBQWUsR0FBQSxLQUFPLElBQVAsSUFBZSxPQUFRLEdBQVIsS0FBa0IsUUFBaEQ7QUFBQSxhQUFPLElBQVA7O0lBQ0EsSUFBQSxHQUFPLElBQUksR0FBRyxDQUFDLFdBQVIsQ0FBQTtJQUNQLEtBQUEsUUFBQTs7TUFDRSxJQUFLLENBQUEsQ0FBQSxDQUFMLEdBQVU7SUFEWjtJQUVBLElBQUcsSUFBQSxJQUFRLFFBQUEsS0FBWSxPQUFPLElBQTlCO01BQ0UsS0FBQSxTQUFBOztRQUNFLElBQUssQ0FBQSxDQUFBLENBQUwsR0FBVTtNQURaLENBREY7O0FBR0EsV0FBTztFQVJlOztFQVd4QixPQUFPLENBQUMsRUFBUixHQUFhLEVBQUEsR0FBSyxJQUFJLENBQUMsUUFBTCxDQUFjLE1BQWQ7O0VBQ2xCLE9BQU8sQ0FBQyxLQUFSLEdBQWdCLEtBQUEsR0FBUSxRQUFBLENBQUMsR0FBRCxFQUFNLFNBQVMsRUFBZixDQUFBO0FBQXNCLFdBQU8sSUFBSSxJQUFKLENBQVMsTUFBVCxDQUFnQixDQUFDLE1BQWpCLENBQXdCLEdBQXhCO0VBQTdCO0FBdEN4QiIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vbWlhanMnKS5jb25maWcoKVxuZXhwb3J0cy51bml0ID0gdW5pdCA9IHJlcXVpcmUoJy4vdW5pdCcpXG57VW5pdH0gPSB1bml0XG5PYmplY3QuYXNzaWduIGV4cG9ydHMsIHVuaXRcblxucmVxdWlyZSAnLi9ub2RlJ1xuIyMjXG5UaGlzIGlzIHRoZSBST09UIG1vZHVsZSBvZiBldmVyeXRoaW5nXG4jIyNcbl9fID0gdW5kZWZpbmVkXG5leHBvcnRzLl9fID0gX19cblxuYHZhciBHZW5lcmF0b3JGdW5jdGlvbiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihmdW5jdGlvbiooKXt9KS5jb25zdHJ1Y3RvcmBcbmV4cG9ydHMuR2VuZXJhdG9yRnVuY3Rpb24gPSBHZW5lcmF0b3JGdW5jdGlvblxuYHZhciBBc3luY0Z1bmN0aW9uID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGFzeW5jIGZ1bmN0aW9uKCl7fSkuY29uc3RydWN0b3JgXG5leHBvcnRzLkFzeW5jRnVuY3Rpb24gPSBBc3luY0Z1bmN0aW9uXG5cbkZ1bmN0aW9uOjpwcm9wZXJ0eSA9IChwcm9wLCBkZXNjKSAtPlxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkgQHByb3RvdHlwZSwgcHJvcCwgZGVzY1xuXG5GdW5jdGlvbjo6aXRlcmF0b3IgPSAoZ2VuZXJhdG9yKSAtPlxuICBAcHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0gPSBAcHJvdG90eXBlLml0ZXJhdG9yID0gZ2VuZXJhdG9yXG5cbkZ1bmN0aW9uOjpUSXRlcmFibGUgPSAtPlxuICBAcHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0gPSAtPiBAaXRlcmF0b3IoKVxuXG5leHBvcnRzLmNsb25lID0gY2xvbmUgPSAob2JqLCB4dHJhKSAtPlxuICByZXR1cm4gb2JqICBpZiBvYmogaXMgbnVsbCBvciB0eXBlb2YgKG9iaikgaXNudCBcIm9iamVjdFwiXG4gIHRlbXAgPSBuZXcgb2JqLmNvbnN0cnVjdG9yKClcbiAgZm9yIGssIHYgb2Ygb2JqXG4gICAgdGVtcFtrXSA9IHZcbiAgaWYgeHRyYSAmJiAnb2JqZWN0JyA9PSB0eXBlb2YgeHRyYVxuICAgIGZvciBrLCB2IG9mIHh0cmFcbiAgICAgIHRlbXBba10gPSB2XG4gIHJldHVybiB0ZW1wXG5cblxuZXhwb3J0cy4kJCA9ICQkID0gdW5pdC5wYWNrYWdlXyBtb2R1bGVcbmV4cG9ydHMudW5pdF8gPSB1bml0XyA9IChjZmcsIHBhcmVudCA9ICQkKSAtPiByZXR1cm4gbmV3IFVuaXQocGFyZW50KS5jb25maWcoY2ZnKVxuIl19

(function() {
  var $$, ConsoleWriter, ReadFile, Runner, Task, build, chain_, project_, runtime, sourcer_, t, t1, t2, t3, t4, task_, unit_, workspace_;

  ({runtime, $$, unit_} = require('./common'));

  $$ = unit_(module);

  ({task_, chain_, Runner, Task} = runtime);

  ({ReadFile, ConsoleWriter} = runtime.streamer);

  ({project_, workspace_, sourcer_, build} = runtime.project);

  t1 = workspace_({
    tasks: [
      project_({
        files: '*.txt',
        tasks: [
          task_(function() {
            return $$.h2('hello');
          })
        ]
      })
    ]
  });

  t2 = workspace_({
    tasks: [
      project_({
        files: '*.txt',
        tasks: [
          sourcer_(function(src) {
            return $$.h2(src);
          })
        ]
      })
    ]
  });

  t3 = workspace_({
    tasks: [
      project_({
        files: '*.txt',
        tasks: [
          sourcer_(function(src) {
            $$.h2(src);
            return this.spawn(function() {
              return console.log('hello');
            });
          })
        ]
      })
    ]
  });

  t4 = workspace_({
    tasks: [
      project_({
        files: '*.txt',
        tasks: [
          sourcer_(function(src) {
            $$.h2(src);
            return this.spawn(chain_(function() {
              return this.chain(new ReadFile(src)).chain(new ConsoleWriter);
            }));
          })
        ]
      })
    ]
  });

  //rnr = new Runner()
  //rnr.run(t1)
  t = t4;

  console.log(t);

  t.run();

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya3NwYWNlL3Rhc2tzLmpzIiwic291cmNlcyI6WyJ3b3Jrc3BhY2UvdGFza3MuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSxFQUFBLEVBQUEsYUFBQSxFQUFBLFFBQUEsRUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxNQUFBLEVBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxRQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBOztFQUFBLENBQUEsQ0FBQyxPQUFELEVBQVUsRUFBVixFQUFjLEtBQWQsQ0FBQSxHQUF1QixPQUFBLENBQVEsVUFBUixDQUF2Qjs7RUFDQSxFQUFBLEdBQUssS0FBQSxDQUFNLE1BQU47O0VBQ0wsQ0FBQSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLE1BQWhCLEVBQXdCLElBQXhCLENBQUEsR0FBZ0MsT0FBaEM7O0VBQ0EsQ0FBQSxDQUFDLFFBQUQsRUFBVyxhQUFYLENBQUEsR0FBNEIsT0FBTyxDQUFDLFFBQXBDOztFQUNBLENBQUEsQ0FBQyxRQUFELEVBQVcsVUFBWCxFQUF1QixRQUF2QixFQUFpQyxLQUFqQyxDQUFBLEdBQTBDLE9BQU8sQ0FBQyxPQUFsRDs7RUFFQSxFQUFBLEdBQUssVUFBQSxDQUNIO0lBQUEsS0FBQSxFQUFPO01BQ0wsUUFBQSxDQUNFO1FBQUEsS0FBQSxFQUFPLE9BQVA7UUFDQSxLQUFBLEVBQU87VUFDTCxLQUFBLENBQU0sUUFBQSxDQUFBLENBQUE7bUJBQ0osRUFBRSxDQUFDLEVBQUgsQ0FBTSxPQUFOO1VBREksQ0FBTixDQURLOztNQURQLENBREYsQ0FESzs7RUFBUCxDQURHOztFQVVMLEVBQUEsR0FBSyxVQUFBLENBQ0g7SUFBQSxLQUFBLEVBQU87TUFDTCxRQUFBLENBQ0U7UUFBQSxLQUFBLEVBQU8sT0FBUDtRQUNBLEtBQUEsRUFBTztVQUNMLFFBQUEsQ0FBUyxRQUFBLENBQUMsR0FBRCxDQUFBO21CQUNQLEVBQUUsQ0FBQyxFQUFILENBQU0sR0FBTjtVQURPLENBQVQsQ0FESzs7TUFEUCxDQURGLENBREs7O0VBQVAsQ0FERzs7RUFVTCxFQUFBLEdBQUssVUFBQSxDQUNIO0lBQUEsS0FBQSxFQUFPO01BQ0wsUUFBQSxDQUNFO1FBQUEsS0FBQSxFQUFPLE9BQVA7UUFDQSxLQUFBLEVBQU87VUFDTCxRQUFBLENBQVMsUUFBQSxDQUFDLEdBQUQsQ0FBQTtZQUNQLEVBQUUsQ0FBQyxFQUFILENBQU0sR0FBTjttQkFDQSxJQUFDLENBQUEsS0FBRCxDQUFPLFFBQUEsQ0FBQSxDQUFBO3FCQUNMLE9BQU8sQ0FBQyxHQUFSLENBQVksT0FBWjtZQURLLENBQVA7VUFGTyxDQUFULENBREs7O01BRFAsQ0FERixDQURLOztFQUFQLENBREc7O0VBWUwsRUFBQSxHQUFLLFVBQUEsQ0FDSDtJQUFBLEtBQUEsRUFBTztNQUNMLFFBQUEsQ0FDRTtRQUFBLEtBQUEsRUFBTyxPQUFQO1FBQ0EsS0FBQSxFQUFPO1VBQ0wsUUFBQSxDQUFTLFFBQUEsQ0FBQyxHQUFELENBQUE7WUFDUCxFQUFFLENBQUMsRUFBSCxDQUFNLEdBQU47bUJBQ0EsSUFBQyxDQUFBLEtBQUQsQ0FBTyxNQUFBLENBQU8sUUFBQSxDQUFBLENBQUE7cUJBQ1osSUFBQyxDQUFBLEtBQUQsQ0FBTyxJQUFJLFFBQUosQ0FBYSxHQUFiLENBQVAsQ0FDQSxDQUFDLEtBREQsQ0FDTyxJQUFJLGFBRFg7WUFEWSxDQUFQLENBQVA7VUFGTyxDQUFULENBREs7O01BRFAsQ0FERixDQURLOztFQUFQLENBREcsRUF0Q0w7Ozs7RUFxREEsQ0FBQSxHQUFJOztFQUNKLE9BQU8sQ0FBQyxHQUFSLENBQVksQ0FBWjs7RUFDQSxDQUFDLENBQUMsR0FBRixDQUFBO0FBdkRBIiwic291cmNlc0NvbnRlbnQiOlsie3J1bnRpbWUsICQkLCB1bml0X30gPSByZXF1aXJlICcuL2NvbW1vbidcbiQkID0gdW5pdF8gbW9kdWxlXG57dGFza18sIGNoYWluXywgUnVubmVyLCBUYXNrfSA9IHJ1bnRpbWVcbntSZWFkRmlsZSwgQ29uc29sZVdyaXRlcn0gPSBydW50aW1lLnN0cmVhbWVyXG57cHJvamVjdF8sIHdvcmtzcGFjZV8sIHNvdXJjZXJfLCBidWlsZH0gPSBydW50aW1lLnByb2plY3RcblxudDEgPSB3b3Jrc3BhY2VfXG4gIHRhc2tzOiBbXG4gICAgcHJvamVjdF9cbiAgICAgIGZpbGVzOiAnKi50eHQnXG4gICAgICB0YXNrczogW1xuICAgICAgICB0YXNrXyAtPlxuICAgICAgICAgICQkLmgyICdoZWxsbydcbiAgICAgIF1cbiAgXVxuXG50MiA9IHdvcmtzcGFjZV9cbiAgdGFza3M6IFtcbiAgICBwcm9qZWN0X1xuICAgICAgZmlsZXM6ICcqLnR4dCdcbiAgICAgIHRhc2tzOiBbXG4gICAgICAgIHNvdXJjZXJfIChzcmMpIC0+XG4gICAgICAgICAgJCQuaDIgc3JjXG4gICAgICBdXG4gIF1cblxudDMgPSB3b3Jrc3BhY2VfXG4gIHRhc2tzOiBbXG4gICAgcHJvamVjdF9cbiAgICAgIGZpbGVzOiAnKi50eHQnXG4gICAgICB0YXNrczogW1xuICAgICAgICBzb3VyY2VyXyAoc3JjKSAtPlxuICAgICAgICAgICQkLmgyIHNyY1xuICAgICAgICAgIEBzcGF3biAtPlxuICAgICAgICAgICAgY29uc29sZS5sb2cgJ2hlbGxvJ1xuICAgICAgXVxuICBdXG5cbnQ0ID0gd29ya3NwYWNlX1xuICB0YXNrczogW1xuICAgIHByb2plY3RfXG4gICAgICBmaWxlczogJyoudHh0J1xuICAgICAgdGFza3M6IFtcbiAgICAgICAgc291cmNlcl8gKHNyYykgLT5cbiAgICAgICAgICAkJC5oMiBzcmNcbiAgICAgICAgICBAc3Bhd24gY2hhaW5fIC0+XG4gICAgICAgICAgICBAY2hhaW4gbmV3IFJlYWRGaWxlIHNyY1xuICAgICAgICAgICAgLmNoYWluIG5ldyBDb25zb2xlV3JpdGVyXG4gICAgICBdXG4gIF1cblxuI3JuciA9IG5ldyBSdW5uZXIoKVxuI3Juci5ydW4odDEpXG50ID0gdDRcbmNvbnNvbGUubG9nIHRcbnQucnVuKClcbiJdfQ==

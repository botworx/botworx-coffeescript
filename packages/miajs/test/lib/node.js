(function() {
  var $$, DerivedNode, Node, Plain, unit_;

  ({$$, unit_} = require('./common'));

  $$ = unit_(module, $$);

  Plain = class Plain {};

  Node = (function() {
    class Node {
      constructor() {
        this.nodes = [];
        this.node1 = 1;
        this.node2 = 2;
      }

    };

    Node.TNode();

    Node.node('node1');

    Node.node('node2');

    return Node;

  }).call(this);

  DerivedNode = (function() {
    class DerivedNode extends Node {
      constructor(e) {
        super();
        this.node3 = e;
      }

    };

    DerivedNode.node('node3');

    return DerivedNode;

  }).call(this);

  describe('TNode', function() {
    return it('should work', function() {
      var n1, n2, node, results;
      $$.$('class Plain');
      $$._(Plain);
      
      $$.$('class Node');
      $$._(Node.toString());
      $$.$('class Node.prototype');
      $$._(Node.prototype);
      
      $$.$('class DerivedNode');
      $$._(DerivedNode.toString());
      $$.$('class DerivedNode.prototype');
      $$._(DerivedNode.prototype);
      
      $$.$('n1.Node');
      n1 = new Node();
      n1.node1 = 0;
      n1.node2 = 2;
      n1.node1 = 1;
      $$._(n1);
      $$.$('nodes');
      for (node of n1) {
        $$._(node);
      }
      $$.$('n2.DerivedNode');
      n2 = new DerivedNode(3);
      $$._(n2);
      $$.$('nodes');
      results = [];
      for (node of n2) {
        results.push($$._(node));
      }
      return results;
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS5qcyIsInNvdXJjZXMiOlsibm9kZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBLEVBQUEsRUFBQSxXQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQTs7RUFBQSxDQUFBLENBQUMsRUFBRCxFQUFLLEtBQUwsQ0FBQSxHQUFjLE9BQUEsQ0FBUSxVQUFSLENBQWQ7O0VBQ0EsRUFBQSxHQUFLLEtBQUEsQ0FBTSxNQUFOLEVBQWMsRUFBZDs7RUFFQyxRQUFOLE1BQUEsTUFBQSxDQUFBOztFQUVNO0lBQU4sTUFBQSxLQUFBO01BSUUsV0FBYSxDQUFBLENBQUE7UUFDWCxJQUFDLENBQUEsS0FBRCxHQUFTO1FBQ1QsSUFBQyxDQUFBLEtBQUQsR0FBUztRQUNULElBQUMsQ0FBQSxLQUFELEdBQVM7TUFIRTs7SUFKZjs7SUFDRSxJQUFDLENBQUEsS0FBRCxDQUFBOztJQUNBLElBQUMsQ0FBQSxJQUFELENBQU0sT0FBTjs7SUFDQSxJQUFDLENBQUEsSUFBRCxDQUFNLE9BQU47Ozs7OztFQU1JO0lBQU4sTUFBQSxZQUFBLFFBQTBCLEtBQTFCO01BRUUsV0FBYSxDQUFDLENBQUQsQ0FBQTthQUNYLENBQUE7UUFDQSxJQUFDLENBQUEsS0FBRCxHQUFTO01BRkU7O0lBRmY7O0lBQ0UsV0FBQyxDQUFBLElBQUQsQ0FBTSxPQUFOOzs7Ozs7RUFJRixRQUFBLENBQVMsT0FBVCxFQUFrQixRQUFBLENBQUEsQ0FBQTtXQUNoQixFQUFBLENBQUcsYUFBSCxFQUFrQixRQUFBLENBQUEsQ0FBQTtBQUNoQixVQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsSUFBQSxFQUFBO01BQUEsRUFBRSxDQUFDLENBQUgsQ0FBSyxhQUFMO01BQ0EsRUFBRSxDQUFDLENBQUgsQ0FBSyxLQUFMOztNQUVBLEVBQUUsQ0FBQyxDQUFILENBQUssWUFBTDtNQUNBLEVBQUUsQ0FBQyxDQUFILENBQUssSUFBSSxDQUFDLFFBQUwsQ0FBQSxDQUFMO01BQ0EsRUFBRSxDQUFDLENBQUgsQ0FBSyxzQkFBTDtNQUNBLEVBQUUsQ0FBQyxDQUFILENBQUssSUFBSSxDQUFDLFNBQVY7O01BRUEsRUFBRSxDQUFDLENBQUgsQ0FBSyxtQkFBTDtNQUNBLEVBQUUsQ0FBQyxDQUFILENBQUssV0FBVyxDQUFDLFFBQVosQ0FBQSxDQUFMO01BQ0EsRUFBRSxDQUFDLENBQUgsQ0FBSyw2QkFBTDtNQUNBLEVBQUUsQ0FBQyxDQUFILENBQUssV0FBVyxDQUFDLFNBQWpCOztNQUVBLEVBQUUsQ0FBQyxDQUFILENBQUssU0FBTDtNQUNBLEVBQUEsR0FBSyxJQUFJLElBQUosQ0FBQTtNQUNMLEVBQUUsQ0FBQyxLQUFILEdBQVc7TUFDWCxFQUFFLENBQUMsS0FBSCxHQUFXO01BQ1gsRUFBRSxDQUFDLEtBQUgsR0FBVztNQUNYLEVBQUUsQ0FBQyxDQUFILENBQUssRUFBTDtNQUNBLEVBQUUsQ0FBQyxDQUFILENBQUssT0FBTDtNQUNBLEtBQUEsVUFBQTtRQUNFLEVBQUUsQ0FBQyxDQUFILENBQUssSUFBTDtNQURGO01BR0EsRUFBRSxDQUFDLENBQUgsQ0FBSyxnQkFBTDtNQUNBLEVBQUEsR0FBSyxJQUFJLFdBQUosQ0FBZ0IsQ0FBaEI7TUFFTCxFQUFFLENBQUMsQ0FBSCxDQUFLLEVBQUw7TUFDQSxFQUFFLENBQUMsQ0FBSCxDQUFLLE9BQUw7QUFDQTtNQUFBLEtBQUEsVUFBQTtxQkFDRSxFQUFFLENBQUMsQ0FBSCxDQUFLLElBQUw7TUFERixDQUFBOztJQTdCZ0IsQ0FBbEI7RUFEZ0IsQ0FBbEI7QUFuQkEiLCJzb3VyY2VzQ29udGVudCI6WyJ7JCQsIHVuaXRffSA9IHJlcXVpcmUoJy4vY29tbW9uJylcbiQkID0gdW5pdF8gbW9kdWxlLCAkJFxuXG5jbGFzcyBQbGFpblxuXG5jbGFzcyBOb2RlXG4gIEBUTm9kZSgpXG4gIEBub2RlICdub2RlMSdcbiAgQG5vZGUgJ25vZGUyJ1xuICBjb25zdHJ1Y3RvcjogLT5cbiAgICBAbm9kZXMgPSBbXVxuICAgIEBub2RlMSA9IDFcbiAgICBAbm9kZTIgPSAyXG5cbmNsYXNzIERlcml2ZWROb2RlIGV4dGVuZHMgTm9kZVxuICBAbm9kZSAnbm9kZTMnXG4gIGNvbnN0cnVjdG9yOiAoZSkgLT5cbiAgICBzdXBlcigpXG4gICAgQG5vZGUzID0gZVxuZGVzY3JpYmUgJ1ROb2RlJywgLT5cbiAgaXQgJ3Nob3VsZCB3b3JrJywgLT5cbiAgICAkJC4kICdjbGFzcyBQbGFpbidcbiAgICAkJC5fIFBsYWluXG4gICAgI1xuICAgICQkLiQgJ2NsYXNzIE5vZGUnXG4gICAgJCQuXyBOb2RlLnRvU3RyaW5nKClcbiAgICAkJC4kICdjbGFzcyBOb2RlLnByb3RvdHlwZSdcbiAgICAkJC5fIE5vZGUucHJvdG90eXBlXG4gICAgI1xuICAgICQkLiQgJ2NsYXNzIERlcml2ZWROb2RlJ1xuICAgICQkLl8gRGVyaXZlZE5vZGUudG9TdHJpbmcoKVxuICAgICQkLiQgJ2NsYXNzIERlcml2ZWROb2RlLnByb3RvdHlwZSdcbiAgICAkJC5fIERlcml2ZWROb2RlLnByb3RvdHlwZVxuICAgICNcbiAgICAkJC4kICduMS5Ob2RlJ1xuICAgIG4xID0gbmV3IE5vZGUoKVxuICAgIG4xLm5vZGUxID0gMFxuICAgIG4xLm5vZGUyID0gMlxuICAgIG4xLm5vZGUxID0gMVxuICAgICQkLl8gbjFcbiAgICAkJC4kICdub2RlcydcbiAgICBmb3Igbm9kZSBmcm9tIG4xXG4gICAgICAkJC5fIG5vZGVcblxuICAgICQkLiQgJ24yLkRlcml2ZWROb2RlJ1xuICAgIG4yID0gbmV3IERlcml2ZWROb2RlKDMpXG5cbiAgICAkJC5fIG4yXG4gICAgJCQuJCAnbm9kZXMnXG4gICAgZm9yIG5vZGUgZnJvbSBuMlxuICAgICAgJCQuXyBub2RlXG4iXX0=

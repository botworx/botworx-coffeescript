(function() {
  var $$, $_, Achieve, Assert, Attempt, Believe, Context, Message, Method, OnAssert, OnAttempt, OnRetract, Policy, Retract, Rule, Runner, Term, Trigger, __, _hello, _say, assert, module_, runner_, runtime, t1, unit_;

  assert = require('chai').assert;

  ({$$, unit_, runtime} = require('./common'));

  $$ = unit_(module);

  ({Term, Context, Assert, Retract, Believe, Attempt, Achieve} = runtime);

  ({$_, __, runner_, module_, Message, Policy, Rule, Trigger, OnAssert, OnRetract, OnAttempt, Runner, Method} = runtime);

  ({_hello, _say} = $_(['hello', 'say']));

  t1 = module_(function() {
    this.def(new OnAttempt(Achieve, null, _say, __), function() {
      var $t;
      $t = this.msg.data.obj;
      return $$._($t);
    });
    this.def(new OnAttempt(Achieve, null, _hello, null), async function() {
      await this.call(null, _say, "Hello World");
      return (await this.call(null, _say, "Goodbye World"));
    });
    return this.perform(null, _hello, null);
  });

  describe('Async', function() {
    $$.tap();
    return describe('@call', function() {
      return it('should work', function() {
        return runner_().run(t1);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMuanMiLCJzb3VyY2VzIjpbImFzeW5jLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxPQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxNQUFBLEVBQUEsUUFBQSxFQUFBLFNBQUEsRUFBQSxTQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsRUFBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBLEVBQUEsRUFBQTs7RUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLE1BQVIsQ0FBZSxDQUFDOztFQUN6QixDQUFBLENBQUMsRUFBRCxFQUFLLEtBQUwsRUFBWSxPQUFaLENBQUEsR0FBdUIsT0FBQSxDQUFRLFVBQVIsQ0FBdkI7O0VBQ0EsRUFBQSxHQUFLLEtBQUEsQ0FBTSxNQUFOOztFQUNMLENBQUEsQ0FBQyxJQUFELEVBQU8sT0FBUCxFQUFnQixNQUFoQixFQUF3QixPQUF4QixFQUFpQyxPQUFqQyxFQUEwQyxPQUExQyxFQUFtRCxPQUFuRCxDQUFBLEdBQThELE9BQTlEOztFQUNBLENBQUEsQ0FBQyxFQUFELEVBQUssRUFBTCxFQUFTLE9BQVQsRUFBa0IsT0FBbEIsRUFBMkIsT0FBM0IsRUFBb0MsTUFBcEMsRUFBNEMsSUFBNUMsRUFBa0QsT0FBbEQsRUFBMkQsUUFBM0QsRUFBcUUsU0FBckUsRUFBZ0YsU0FBaEYsRUFBMkYsTUFBM0YsRUFBbUcsTUFBbkcsQ0FBQSxHQUE2RyxPQUE3Rzs7RUFFQSxDQUFBLENBQUUsTUFBRixFQUFVLElBQVYsQ0FBQSxHQUFtQixFQUFBLENBQUcsQ0FBRSxPQUFGLEVBQVcsS0FBWCxDQUFILENBQW5COztFQUVBLEVBQUEsR0FBSyxPQUFBLENBQVEsUUFBQSxDQUFBLENBQUE7SUFFWCxJQUFDLENBQUEsR0FBRCxDQUFLLElBQUksU0FBSixDQUFjLE9BQWQsRUFBdUIsSUFBdkIsRUFBNkIsSUFBN0IsRUFBbUMsRUFBbkMsQ0FBTCxFQUE2QyxRQUFBLENBQUEsQ0FBQTtBQUMzQyxVQUFBO01BQUEsRUFBQSxHQUFLLElBQUMsQ0FBQSxHQUFHLENBQUMsSUFBSSxDQUFDO2FBQ2YsRUFBRSxDQUFDLENBQUgsQ0FBSyxFQUFMO0lBRjJDLENBQTdDO0lBSUEsSUFBQyxDQUFBLEdBQUQsQ0FBSyxJQUFJLFNBQUosQ0FBYyxPQUFkLEVBQXVCLElBQXZCLEVBQTZCLE1BQTdCLEVBQXFDLElBQXJDLENBQUwsRUFBaUQsTUFBQSxRQUFBLENBQUEsQ0FBQTtNQUMvQyxNQUFNLElBQUMsQ0FBQSxJQUFELENBQU0sSUFBTixFQUFZLElBQVosRUFBa0IsYUFBbEI7YUFDTixDQUFBLE1BQU0sSUFBQyxDQUFBLElBQUQsQ0FBTSxJQUFOLEVBQVksSUFBWixFQUFrQixlQUFsQixDQUFOO0lBRitDLENBQWpEO1dBSUEsSUFBQyxDQUFBLE9BQUQsQ0FBUyxJQUFULEVBQWUsTUFBZixFQUF1QixJQUF2QjtFQVZXLENBQVI7O0VBWUwsUUFBQSxDQUFTLE9BQVQsRUFBa0IsUUFBQSxDQUFBLENBQUE7SUFDaEIsRUFBRSxDQUFDLEdBQUgsQ0FBQTtXQUNBLFFBQUEsQ0FBUyxPQUFULEVBQWtCLFFBQUEsQ0FBQSxDQUFBO2FBQ2hCLEVBQUEsQ0FBRyxhQUFILEVBQWtCLFFBQUEsQ0FBQSxDQUFBO2VBQ2hCLE9BQUEsQ0FBQSxDQUFTLENBQUMsR0FBVixDQUFjLEVBQWQ7TUFEZ0IsQ0FBbEI7SUFEZ0IsQ0FBbEI7RUFGZ0IsQ0FBbEI7QUFwQkEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3NlcnQgPSByZXF1aXJlKCdjaGFpJykuYXNzZXJ0XG57JCQsIHVuaXRfLCBydW50aW1lfSA9IHJlcXVpcmUoJy4vY29tbW9uJylcbiQkID0gdW5pdF8gbW9kdWxlXG57VGVybSwgQ29udGV4dCwgQXNzZXJ0LCBSZXRyYWN0LCBCZWxpZXZlLCBBdHRlbXB0LCBBY2hpZXZlfSA9IHJ1bnRpbWVcbnskXywgX18sIHJ1bm5lcl8sIG1vZHVsZV8sIE1lc3NhZ2UsIFBvbGljeSwgUnVsZSwgVHJpZ2dlciwgT25Bc3NlcnQsIE9uUmV0cmFjdCwgT25BdHRlbXB0LCBSdW5uZXIsIE1ldGhvZH0gPSBydW50aW1lXG5cbnsgX2hlbGxvLCBfc2F5IH0gPSAkXyBbICdoZWxsbycsICdzYXknIF1cblxudDEgPSBtb2R1bGVfIC0+XG5cbiAgQGRlZiBuZXcgT25BdHRlbXB0KEFjaGlldmUsIG51bGwsIF9zYXksIF9fKSwgLT5cbiAgICAkdCA9IEBtc2cuZGF0YS5vYmpcbiAgICAkJC5fICR0XG5cbiAgQGRlZiBuZXcgT25BdHRlbXB0KEFjaGlldmUsIG51bGwsIF9oZWxsbywgbnVsbCksIC0+XG4gICAgYXdhaXQgQGNhbGwobnVsbCwgX3NheSwgXCJIZWxsbyBXb3JsZFwiKVxuICAgIGF3YWl0IEBjYWxsKG51bGwsIF9zYXksIFwiR29vZGJ5ZSBXb3JsZFwiKVxuXG4gIEBwZXJmb3JtKG51bGwsIF9oZWxsbywgbnVsbClcblxuZGVzY3JpYmUgJ0FzeW5jJywgLT5cbiAgJCQudGFwKClcbiAgZGVzY3JpYmUgJ0BjYWxsJywgLT5cbiAgICBpdCAnc2hvdWxkIHdvcmsnLCAtPlxuICAgICAgcnVubmVyXygpLnJ1biB0MVxuIl19
